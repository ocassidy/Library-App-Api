version: 2
jobs:
  build:
    environment:
      _JAVA_OPTIONS: '-Xmx3g'
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2'
    docker:
      - image: circleci/openjdk:latest
      - image: circleci/postgres:latest
        environment:
          LIBRARY_DB_USERNAME: Library_App_Api_User
          LIBRARY_DB_PASSWORD: finalYearAppProject

    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run: gradle clean build

      - run:
          name: Assemble JAR
          command: |
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              ./gradlew assemble
            fi
      - store_artifacts:
          path: build/libs
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy heroku-integration to Heroku
          #TODO: Change to master once build confirmed working
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git heroku-integration
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: heroku-integration
